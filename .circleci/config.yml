# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
orbs:
  codecov: codecov/codecov@1.0.4
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.py" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            python setup.py install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup.py" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - store_test_results:
          path: test-reports
      - persist_to_workspace:
          root: .
          paths:
            - coverage.xml
      - run:
          name: upload codecov.io coverage
          command: |
           ls venv/bin
           . venv/bin/activate
           pip install codecov
           find . -type f -ls
           codecov --token $CODECOV_TOKEN
  sonar:
    docker:
      - image: newtmitch/sonar-scanner:latest
    working_directory: /usr/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - restore_cache:
          keys:
            - sonar
      - run:
          name: Run sonar-scanner
          command: |
            sed -i -e 's|/home/circleci/repo/zingstats|/usr/src/zingstats|' /tmp/workspace/coverage.xml
            sonar-scanner -X -Dsonar.login=$SONARCLOUD_TOKEN -Dsonar.python.coverage.reportPath=/tmp/workspace/coverage.xml
      - save_cache:
          paths:
            - /root/.sonar
          key: sonar

workflows:
  version: 2
  ci_workflow:
    jobs:
      - build
      - sonar:
          requires:
            - build
